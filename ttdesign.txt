=========================
Task Tracker Design File
=========================




Class: Task
--------------------------

Data:
- key: int
- name: String
- description: String
- dueDate: LocalDate
- completed: boolean

Methods:
+ Task(String name, String description, LocalDate date)
+ Task(int key, String name, String description, LocalDate dueDate, boolean completed)
+ isComplete(): boolean
+ complete(): void
+ print(): void




Class: TaskCollection
--------------------------

Data:
- tasks: ArrayList<Task>

Methods:
+ loadTasks(String fname): void
+ saveTasks(String fname): void
+ display(): void
+ addTask(Task): void
+ getTask(int key): Task




Class: User
--------------------------

Data:
- id: int
- name: String
- pword: String

Methods:
+ checkName(String s) -> return (s.compareTo(name) == 0); (i.e. is s == name?)
+ checkPassword(String s) -> return (s.compareTo(pword) == 0); (i.e. is s == pword?)
+ print()




Class: UserCollection
--------------------------

Data:
-users: ArrayList<User>

Methods:
+getUsers()
+setUsers()
+findUser(String query) User
	search through every user and check if their name matches the query
	if none do, print that no users match the query & return Null
	-> use the User.checkName() method
+display() Void
	if (users.isEmpty()) { print("no users to display")
	} else { for (User u: users) { u.print() } }
+getUser(int key) User
	return users.get(key);



Class: TextBasedApp
--------------------------


Data:
-userKey: int		current user's key
-taskKey: int		selected task's key
-users: UserCollection	list of all users
-tasks: TaskCollection	list of all tasks

Methods:
-main() Void
	// test();
	login();
	mainMenu();
	quit();
-test() Void
	loadAppData()
	loadUsers()
	loadTasks()
	// put whatever you need here
	quit() --> without saving
-login() Void
	user = loadUsers();
	user = getUser();
	authenticateUser();
	loadAppData();
	loadTasks();
	update();
-loadAppData()
	loads userKey and taskKey
-loadUsers() UserCollection
	loads users from users.csv
-loadTasks() TaskCollection
	loads tasks from tasks.csv
-getUser() User
	prompt for a username
	user = users.findUser(String username);
	if (user != Null) { return user;
	} else if (username == 'y') { return createNewUser();
	} else { print message to enter 'y' to create an account
	} return getUser();
-authenticateUser() Void
	for (int attempts = 0; attempts < 3; attempts++) {
		prompt for password
		if (user.checkPassword(p)) return true;
		else, say that the attempt was incorrect
	} quit();
-mainMenu() Void
	Prompt for one of the following:
		1. Display Tasks
		2. Add Task
		3. Select Task
		// 4. User Settings
		...
		n. Quit
-createNewUser() User
	prompt the user to input: Name and Password
	make sure to verify password choice
	return new User object, userKey should be an argument
-createNewTask() Task
	prompt the user to input: Task Name, Description, and Due Date
	Name can't be an empty string
	Description can be an empty string
	Due Date is Null if no date specified * need a helper function to convert
	user input to a Datetime
	User's taskKeys should be updated
	return new Task object, use taskKey as an argument, then increment it	
-quit() Void
	quits the program. Probably needs to save some stuff.




================
Future Additions
================

Subtasks
Groups
Projects

User Settings:
	-changeUserName
	-changePassword
	-deleteAccount

Database & Security stuff:
	-Only load what we need
	-Overwrite specific lines when saving
	-Don't load all user data during log in. Instead, load only usernames
	and passwords for user authentication, then load the logged in user's data.
